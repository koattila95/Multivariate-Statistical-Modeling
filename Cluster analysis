# Cluster analysis about suicide datas of 2014 in the world.
## source: https://www.kaggle.com/russellyates88/suicide-rates-overview-1985-to-2016

getwd()
setwd("C:/dokumentumok/MA egyetem/többváltozós statisztikai analízis gyak/klaszter hf")
df2 <- read.csv("C:/dokumentumok/MA egyetem/többváltozós statisztikai analízis gyak/klaszter hf/master.csv"
                ,header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE, encoding="UTF-8", #az adatfile beolvasásával kezdtem
                check.names = FALSE, stringsAsFactors = FALSE)
head(df2)

colnames(df2)
newhead <- enc2native(colnames(df2))
newhead <- gsub("<[^>]+>", "", newhead) 
colnames(df2) <- newhead

colnames(df2)[7]  <- "suicides.100k.pop"
colnames(df2[7])
colnames(df2)[8]  <- "country.year"      
colnames(df2[8])
colnames(df2)[9] <- "HDI.for.year"
colnames(df2[9])
colnames(df2)[10] <- "GDP.for.year"
colnames(df2)[11] <- "GDP.per.capita"
colnames(df2)
library(plyr)

df2.2 <- ddply(df2,.(country.year), summarise,ongyilkosok.szama=sum(suicides_no), 
               lakossag.szama=sum(population), év=unique(year), ország=unique(country), 
               éves.HDI=unique(HDI.for.year), éves.GDP=unique(GDP.for.year), egy.fore.eso.GDP=unique(GDP.per.capita))
head(df2.2)

df3.2 <- subset(df2.2, év=="2014")
tail(df3.2)
dfok <- na.omit(df3.2)
colnames(dfok)
rownames(dfok) <- dfok[,5]
dfok[,5] <- NULL
dfok[,1] <- NULL
dfok[,3] <- NULL
head(dfok)
dfok$éves.GDP <- gsub(",", "", dfok$éves.GDP, fixed = TRUE)
dfok$éves.GDP <- gsub(".", "", dfok$éves.GDP, fixed = TRUE)
str(dfok)
dfok$éves.GDP <- as.numeric(dfok$éves.GDP)

############# mintavételezés az országokból 20 elemet ############# 

dfmv <- dfok[sample(nrow(dfok), 20), ]
str(dfmv)
dfmvscale <- scale(dfmv)
summary(dfmvscale)


##### 2014-es adatok alapján cluster, melyik országok csoportosulnak egyutt ongyilkosságok tukrében #####



summary(dfok)
dfscale <- scale(dfok)
summary(dfscale)

# Determine number of clusters
wss <- (nrow(dfscale)-1)*sum(apply(dfscale,2,var))
for (i in 2:15) {
  wss[i] <- sum(kmeans(dfscale, centers=i)$withinss)
}
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")


library(NbClust)

NbClust(dfscale, method = 'complete', index = 'dindex')

#vs. eredeti adat: STANDARDIZÁLÁS FONTOSSÁGA!

NbClust(mtcars, method = 'complete', index = 'dindex')

NbClust(mydata, method = 'complete', index = 'all')$Best.nc[1,]

#Ha van elég megfigyelés:
NbClust(dfscale[, -5], method = 'complete', index = 'all')$Best.nc[1,]

# Hierarchikus:
d <- dist(dfscale)
h <- hclust(d)
h

par(mfrow=c(1,1))

plot(h)

plot(h)
rect.hclust(h, k=6, border = "red")

# menteni:
(cn <- cutree(h, k = 4))

table(cn)
# Egyes klaszterek értelmezése: ! Nem a standardizáltakon, hogy direkt módon lehessen értelmezni!

round(aggregate(dfok, FUN = mean, by = list(cn)), 1)
# A klaszterezés lényege: utólagos rétegzés:)
#Csoportonkénti szórás:
round(aggregate(dfok, FUN = sd, by = list(cn)), 1)
#totál szórás:
round(sapply(dfok, sd), 1)
#Csoportok szórása egymáshoz képest:
round(apply(aggregate(dfok, FUN = mean, by = list(cn)), 2, sd), 1)

# változó erősség: F értéket kell nézni a standardizáltra!
summary(aov(dfscale$éves.HDI ~ cn))


# K-Means Cluster Analysis
fit <- kmeans(dfscale, 4) # 4 cluster solution
# get cluster means
aggregate(dfscale,by=list(fit$cluster),FUN=mean)
aggregate(dfscale,by=list(fit$cluster),FUN=mean)

# append cluster assignment
mydata <- data.frame(dfscale, fit$cluster)

# Ward Hierarchical Clustering with Bootstrapped p values:
# Klaszter stabilitás
library(pvclust)
fit <- pvclust(t(mydata), method.hclust="ward", method.dist="euclidean") # vigyázz: fordított adatszerkezetet vár!!
#The green number is the Bootstrap Probability * 100 (BP) and has the most straightforward interpretation
#The red number is the Approximately Unbiased p-value * 100 (AU) and is a corrected version of BP to limit bias
plot(fit) # dendogram with p values
# add rectangles around groups highly supported by the data
pvrect(fit, alpha=.95)
#For a cluster with AU p-value > 0.95, the hypothesis that "the cluster does not exist" is rejected with significance level 0.05; roughly speaking, we can think that these highlighted clusters does not only "seem to exist" caused by sampling error, but may stably be observed if we increase the number of observation.


####### a mintavételezettre értendöek a lentebbi adatok (dfmvscale) ############


# K-Means Clustering with 4 clusters
fit <- kmeans(dfmvscale, 4)

# Plotting Cluster Solutions

# Cluster Plot against 1st 2 principal components

# vary parameters for most readable graph
library(cluster)
clusplot(dfmvscale, fit$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)


# comparing 2 cluster solutions:
fit1 <- kmeans(mydata, 4)
table(fit1$cluster, cn)

#library(fpc)
#cluster.stats(d, fit1$cluster, cn)


# Model Based Clustering
#https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5096736/
library(mclust)
fit <- Mclust(mydata)
plot(fit) # plot results
summary(fit) # display the best model
